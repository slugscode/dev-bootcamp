@using XPOS_ViewModels;
@model VMProduct

<form asp-action="Create" method="post" enctype="multipart/form-data" id="form-create">

    <div class="card body">
        <div class="row"

            <div class=col-6>

                  <div class="mb-3">
            <label for="NameProduct" class="form-label">Name Product</label>
            <input type="text" class="form-control" id="NameProduct" value="@Model.NameProduct" name="NameProduct">
        </div>

        <div class="mb-3">
            <label for="IdCategory" class="form-label">Nama Category</label>
                    @Html.DropDownListFor(a => a.IdCategory,
            new SelectList(ViewBag.ListCategory, "Id","NamaCategory"),"Select Category",
            new{ @class="form-control"})
        </div>

        <div class="mb-3">
            <label for="NameVariant" class="form-label">Name Variant</label>
                    @Html.DropDownListFor(a => a.IdVariant,
            new SelectList(ViewBag.ListVariant, "Id","NameVariant"),"Select Variant",
            new{ @class="form-control"})
        </div>

            </div>

            <div class=col-6>

        <div class="mb-3">
            <label for="Stock" class="form-label">Stock</label>
            <input type="number" class="form-control" id="Stock" value="@Model.Stock" name="Stock">
        </div>

        <div class="mb-3">
            <label for="Price" class="form-label">Price</label>
            <input type="number" class="form-control" id="Price" value="@Model.Price" name="Price">
        </div>

        <div class="mb-3">
            <label for="Image" class="form-label">Upload Image</label>
            <input type="file" class="form-control" id="ImageFile" value="@Model.Image" name="ImageFile">
        </div>

        <div class="card-footer claerfix">
            <a asp-action="Index" class="btn btn-light">Cancel</a>
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>


            </div>
            </div>

    </div>
</form>

<script>
    $("#form-create").validate({
        errorClass: "is-invalid text-danger",

        rules: {
            NameProduct: {
                required: true,
                minlength: 2
            },

            IdCategory: "required",

            IdVariant: "required",

            Price: {
                required: true,
                number: true
            },

            Stock: {
                required: true,
                number: true

            },

            ImageFile: {
                extension: "jpeg|jpg|png"
            }
        },

        messages: {
            NameProduct: {
                required: "Please enter name product",
                minlength: "Name product must consist at least 2 character"
            },

            IdCategory: "Please select category",

            IdVariant: "Please select variant",

            Price: {
                required: "Please enter price",
                number: "Please number only",
            },

            Stock: {
                required: "Please enter stock",
                number: "Please number only",
            },

            ImageFile: {
                extension: "Please upload image jpeg/jpg/png"
            },

            submitHandler: function (form) {

                debugger

                var data = new FormData();

                var dataForm=$(form).serializeArray();

                $.each(dataForm,function(key,input){
                    data.append(input.name,input.value)
                })

                var file = $("#ImageFile").prop("files")

                if(file.length>0){
                    data.append("ImageFile",file[0])
                }
              //fungsi ajax

                $.ajax({
                    url: "/Product/Create",
                    method: "post",
                    data: data,
                    dataType: "json",
                    contentType:false,
                    processData:false,

                    success: function (respon) {
                        debugger

                        if (respon.dataRespon.success) {
                            $("#modal-default").modal("hide")

                            toastr.success(respon.dataRespon.message)

                            setTimeout(function () {
                                window.location.reload();
                            }, 2000);

                        }
                        else {
                            toastr.error(respon.dataRespon.message)
                        }
                    }

                })

            }

        })
</script>
